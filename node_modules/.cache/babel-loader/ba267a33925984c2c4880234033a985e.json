{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\touat\\\\OneDrive\\\\Bureau\\\\react\\\\projet-final-react\\\\pendu\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Keybord from './Keybord';\nimport CurrentWord from './CurrentWord';\nimport Heart from './Heart';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      wordColection: [\"train\", \"code\", \"licorne\", \"glace\", \"sourie\", \"wordpresse\"],\n      currentWord: null,\n      alphabet: \"abcdefghijklmnopqrstuvwxyz\".split(''),\n      usedLetter: [],\n      win: 0,\n      attempts: 0,\n      maxAttempts: 9\n    };\n\n    this.clickLetter = letter => {\n      console.log(\"=>\" + letter);\n\n      if (this.state.usedLetter.indexOf(letter) === -1) {\n        let attempts = this.state.attempts;\n        const usedLetter = [...this.state.usedLetter, letter];\n\n        if (this.state.currentWord.indexOf(letter) === -1) {\n          attempts = this.state.attempts + 1;\n        }\n\n        let win = 1;\n\n        for (let i = 0; i < this.state.currentWord.length; i++) {\n          if (usedLetter.indexOf(this.state.currentWord[i]) === -1) {\n            win = 0;\n          }\n        }\n\n        if (attempts >= this.state.maxAttempts && win === 0) {\n          win = -1;\n        }\n\n        this.setState({\n          usedLetter,\n          attempts,\n          win\n        });\n      }\n    };\n\n    this.pickNewWord = () => {\n      const randomIndex = Math.floor(Math.random() * this.state.wordColection.length);\n      return this.state.wordColection[randomIndex];\n    };\n\n    this.initGame = () => {\n      this.setState({\n        currentWord: this.pickNewWord(),\n        usedLetter: [],\n        win: 0,\n        attempts: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keyup', e => {\n      console.log(e);\n\n      if (e.keyCode === 13) {\n        this.initGame();\n      }\n    }); //  this.initGame()\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"pendu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 10\n      }, this), this.state.currentWord !== null && /*#__PURE__*/_jsxDEV(CurrentWord, {\n        currentWord: this.state.currentWord,\n        usedLetter: this.state.usedLetter,\n        win: this.state.win\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), this.state.currentWord !== null && /*#__PURE__*/_jsxDEV(Heart, {\n        attempts: this.state.attempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this), this.state.win === 0 && this.state.currentWord !== null && /*#__PURE__*/_jsxDEV(Keybord, {\n        alphabet: this.state.alphabet,\n        usedLetter: this.state.usedLetter,\n        action: this.clickLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), (this.state.currentWord === null || this.state.win === 1) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.initGame(),\n        children: \"nouvelle partie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/touat/OneDrive/Bureau/react/projet-final-react/pendu/src/App.js"],"names":["React","Component","Keybord","CurrentWord","Heart","App","state","wordColection","currentWord","alphabet","split","usedLetter","win","attempts","maxAttempts","clickLetter","letter","console","log","indexOf","i","length","setState","pickNewWord","randomIndex","Math","floor","random","initGame","componentDidMount","window","addEventListener","e","keyCode","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Keybord from './Keybord';\nimport CurrentWord from './CurrentWord';\nimport Heart from './Heart';\n\nimport './App.css';\n\n\nclass App extends Component {\n\n    state = {\n      wordColection: [\"train\", \"code\", \"licorne\", \"glace\", \"sourie\", \"wordpresse\"],\n      currentWord: null,\n      alphabet: \"abcdefghijklmnopqrstuvwxyz\".split(''),\n      usedLetter: [],\n      win: 0,\n      attempts: 0,\n      maxAttempts: 9,\n    };\n\n\n    clickLetter = (letter) => {\n      console.log(\"=>\" + letter)\n\n        if(this.state.usedLetter.indexOf(letter) === -1){\n          let attempts = this.state.attempts\n\n          const usedLetter = [...this.state.usedLetter, letter]\n\n          if(this.state.currentWord.indexOf(letter) === -1){\n             attempts = this.state.attempts +1\n          }\n          \n          let win = 1\n          for(let i = 0; i < this.state.currentWord.length; i++){\n              if(usedLetter.indexOf(this.state.currentWord[i]) === -1 ){\n                win = 0\n              }\n          }\n\n          if(attempts >= this.state.maxAttempts && win === 0){\n            win = -1\n          }\n          \n          \n          this.setState({usedLetter, attempts, win})\n        }\n      }\n\n    componentDidMount() {\n      window.addEventListener('keyup', (e) => {\n        console.log(e)\n        if(e.keyCode === 13){\n          this.initGame()\n        }\n      })\n\n    //  this.initGame()\n    }\n\n    \n    pickNewWord = () => {\n       const randomIndex = Math.floor(Math.random() * this.state.wordColection.length) \n            return this.state.wordColection[randomIndex]\n    }\n\n\n    initGame = () => {\n      this.setState({currentWord: this.pickNewWord(),\n                     usedLetter: [],\n                     win: 0,\n                     attempts: 0})\n    }\n\n\n  render() {\n     return (\n       <div id=\"game\">\n         <h1>pendu</h1>\n\n         {\n            this.state.currentWord !== null &&\n            <CurrentWord currentWord={this.state.currentWord}\n                         usedLetter={this.state.usedLetter}\n                         win={this.state.win}\n           />\n         }\n\n         {\n             this.state.currentWord !== null &&\n             <Heart attempts={this.state.attempts}/>\n         }\n\n         {  \n            this.state.win === 0 && this.state.currentWord !== null &&\n            <Keybord alphabet={this.state.alphabet}\n                     usedLetter={this.state.usedLetter}\n                     action={this.clickLetter}\n           />\n         }\n         \n         {\n            (this.state.currentWord === null || this.state.win === 1) &&\n            <button onClick={() => this.initGame()}>nouvelle partie</button>\n         }\n       </div>\n   )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}