{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\touat\\\\OneDrive\\\\Bureau\\\\react\\\\projet-final-react\\\\pendu\\\\src\\\\CurrentWord.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrentWord = _ref => {\n  let {\n    currentWord,\n    usedLetter\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentWord.split('').map((letter, index) => {\n      let status = 'finded';\n\n      if (usedLetter.indexOf(letter) === -1) {\n        status = 'notfinded';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: status,\n        children: status === 'finded' ? letter : this.props.win == '?'\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 31\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 7\n  }, this);\n};\n\n_c = CurrentWord;\nexport default CurrentWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWord\");","map":{"version":3,"sources":["C:/Users/touat/OneDrive/Bureau/react/projet-final-react/pendu/src/CurrentWord.js"],"names":["React","CurrentWord","currentWord","usedLetter","split","map","letter","index","status","indexOf","props","win"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,QAA+B;AAAA,MAA9B;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAA8B;AACjD,sBACI;AAAA,cAEQD,WAAW,CAACE,KAAZ,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAEpC,UAAIC,MAAM,GAAG,QAAb;;AACA,UAAGL,UAAU,CAACM,OAAX,CAAmBH,MAAnB,MAA+B,CAAC,CAAnC,EAAqC;AACjCE,QAAAA,MAAM,GAAG,WAAT;AACH;;AACD,0BAAO;AAAM,QAAA,SAAS,EAAEA,MAAjB;AAAA,kBAAsCA,MAAM,KAAK,QAAX,GAAsBF,MAAtB,GACsB,KAAKI,KAAL,CAAWC,GAAX,IAAoB;AADhF,SAA8BJ,KAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AAGR,KATD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBD,CAjBD;;KAAMN,W;AAmBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\n\r\nconst CurrentWord = ({currentWord, usedLetter}) => {\r\n  return (\r\n      <div>\r\n          {\r\n              currentWord.split('').map((letter, index) => {\r\n \r\n                       let status = 'finded'\r\n                       if(usedLetter.indexOf(letter) === -1){\r\n                           status = 'notfinded'\r\n                       }\r\n                       return <span className={status} key={index}>{status === 'finded' ? letter :\r\n                                                                                          this.props.win ==   '?'}\r\n                              </span>\r\n              })\r\n          }\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default CurrentWord;\r\n"]},"metadata":{},"sourceType":"module"}