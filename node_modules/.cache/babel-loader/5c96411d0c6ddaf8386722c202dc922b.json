{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\touat\\\\OneDrive\\\\Bureau\\\\react\\\\projet-final-react\\\\pendu\\\\src\\\\Heart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heart = _ref => {\n  let {\n    attempts,\n    maxAttempts\n  } = _ref;\n\n  const attemptsToHeart = (attempts, maxAttempts) => {\n    let heart = [];\n\n    for (let i = 1; i <= maxAttempts; i++) {\n      if (i <= attempts) {\n        heart.push(attempt);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"life\",\n    children: attemptsToHeart(attempts, maxAttempts).map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Heart;\nexport default Heart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heart\");","map":{"version":3,"sources":["C:/Users/touat/OneDrive/Bureau/react/projet-final-react/pendu/src/Heart.js"],"names":["React","Heart","attempts","maxAttempts","attemptsToHeart","heart","i","push","attempt","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,QAA6B;AAAA,MAA5B;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAA4B;;AAExC,QAAMC,eAAe,GAAG,CAACF,QAAD,EAAWC,WAAX,KAA2B;AAC/C,QAAIE,KAAK,GAAE,EAAX;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIH,WAApB,EAAiCG,CAAC,EAAlC,EAAqC;AACjC,UAAGA,CAAC,IAAIJ,QAAR,EAAiB;AACbG,QAAAA,KAAK,CAACE,IAAN,CAAWC,OAAX;AACH;AACJ;AACJ,GAPD;;AAUD,sBACI;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA,cAEQJ,eAAe,CAACF,QAAD,EAAWC,WAAX,CAAf,CAAuCM,GAAvC,CAA2C,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvD,0BAAO;AAAA,kBAAmBD;AAAnB,SAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACL,KAFD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CArBD;;KAAMV,K;AAuBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Heart = ({attempts, maxAttempts}) => {\r\n\r\n   const attemptsToHeart = (attempts, maxAttempts) => {\r\n       let heart =[]\r\n       for(let i = 1; i <= maxAttempts; i++){\r\n           if(i <= attempts){\r\n               heart.push(attempt)\r\n           }\r\n       }\r\n   }\r\n\r\n\r\n  return (\r\n      <div id='life'>\r\n          {\r\n              attemptsToHeart(attempts, maxAttempts).map((value, index) => {\r\n                    return <span key={index}>{value}</span>\r\n              })\r\n          }\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Heart;\r\n"]},"metadata":{},"sourceType":"module"}